{
    "name": "Luasm",
    "fileTypes": ["luasm"],
    "scopeName": "source.luasm",
    "patterns": [
        {"include": "#controlKeywords"},
        {"include": "#numericConstants"},
        {"include": "#doubleQuotedStrings"},
        {"include": "#comments"},
        {"include": "#labels"},
        {"include": "#blockStart"},
        {"include": "#blockEnd"},
        {"include": "#directives"},
        {"include": "#directiveParameters"},
        {"include": "#preprocessorDirectives"},
        {"include": "#otherVariables"},
        {"include": "#macroDefinition"}
    ],
    "repository": {
        "controlKeywords": {
            "match": "\\b(GETUPVAL|LOADK|GETGLOBAL|CALL|RETURN|CLOSURE)\\b",
            "name": "keyword.control.luasm"
        },
        "numericConstants": {
            "match": "\\b(\\d+)\\b",
            "name": "constant.numeric.luasm"
        },
        "doubleQuotedStrings": {
            "match": "\"(.*?)\"",
            "name": "string.quoted.double.luasm"
        },
        "comments": {
            "match": ";.*",
            "name": "comment.line.semicolon.luasm"
        },
        "labels": {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b:",
            "name": "entity.name.label.luasm"
        },
        "blockStart": {
            "match": "\\{",
            "name": "punctuation.section.block.begin.luasm"
        },
        "blockEnd": {
            "match": "\\}",
            "name": "punctuation.section.block.end.luasm"
        },
        "directives": {
            "match": "\\b(.closure|.NUMPARAMS|.ISVARARG|.MAXSTACKSIZE|.CODE|.CONSTANTS|.PROTOTYPES|.UPVALUES)\\b",
            "name": "keyword.directive.luasm"
        },
        "directiveParameters": {
            "match": "\\b(.closure|.NUMPARAMS|.ISVARARG|.MAXSTACKSIZE|.CODE|.CONSTANTS|.PROTOTYPES|.UPVALUES)\\s*:\\s*\\{([^}]*)\\}",
            "captures": {
                "1": {
                    "name": "keyword.directive.luasm"
                },
                "2": {
                    "name": "variable.parameter.luasm"
                }
            }
        },
        "preprocessorDirectives": {
            "match": "#define\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\((.*?)\\)\\s*\\\\",
            "captures": {
                "1": {
                    "name": "entity.name.function.preprocessor.luasm"
                },
                "2": {
                    "name": "variable.parameter.function.preprocessor.luasm"
                }
            }
        },
        "otherVariables": {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "name": "variable.other.luasm"
        },
        "macroDefinition": {
            "begin": "#define\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\((.*?)\\)",
            "end": "(?<!\\\\)$",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.preprocessor.luasm"
                },
                "2": {
                    "name": "variable.parameter.function.preprocessor.luasm"
                }
            },
            "patterns": [
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "name": "variable.parameter.macro.luasm"
                }
            ]
        }
    }
}